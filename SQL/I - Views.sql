--View Exercise
USE [A01-School]
GO

--1.  Create a view of staff full names called StaffList.
IF OBJECT_ID('StaffList', 'V') IS NOT NULL
    DROP VIEW StaffList
GO
CREATE VIEW StaffList
AS
    SELECT  FirstName + ' ' + LastName AS 'StaffFullName'
    FROM    Staff
GO
-- Now we can use the StaffList view as if it were a table
SELECT  StaffFullName
FROM    StaffList
-- SP_HELPTEXT StaffList    -- Gets the text of the View
-- SP_HELP StaffList        -- Gets schema info on the View
GO
--2.  Create a view of staff ID's, full names, positionID's and datehired called StaffConfidential.
IF OBJECT_ID('StaffConfidential', 'V') IS NOT NULL
    DROP VIEW StaffConfidential
GO
CREATE VIEW StaffConfidential
AS
    SELECT  StaffID,
            FirstName + ' ' + LastName AS 'FullName',
            PositionID,
            DateHired
    FROM    Staff
GO
-- I can use it accordingly:
SELECT  FullName, DateHired
FROM    StaffConfidential
GO
--2a. Alter the StaffConfidential view so that it includes the position name.
ALTER VIEW StaffConfidential
AS
    SELECT  StaffID,
            FirstName + ' ' + LastName AS 'FullName',
            P.PositionID,
            PositionDescription AS 'PositionName',
            DateHired
    FROM    Staff S
        INNER JOIN Position P ON S.PositionID = P.PositionID
GO
SELECT  FullName, PositionName, PositionID
FROM    StaffConfidential
GO

--3.  Create a view called StudentSummary that shows the student's full name,
--    year and month of their birth, and the number of payments they have made
IF OBJECT_ID('StudentSummary', 'V') IS NOT NULL
    DROP VIEW StudentSummary
GO
CREATE VIEW StudentSummary
AS
    SELECT  FirstName + ' ' + LastName AS 'FullName',
            YEAR(BirthDate) AS 'YearOfBirth',
            DATENAME(MONTH, BirthDate) AS 'MonthOfBirth',
            COUNT(P.PaymentID) AS 'PaymentsMade'
    FROM    Student S
        LEFT OUTER JOIN Payment P ON S.StudentID = P.StudentID 
    GROUP BY FirstName, LastName, Birthdate
             
GO
-- Use the View to get information
SELECT  FullName, YearOfBirth, MonthOfBirth, PaymentsMade
FROM    StudentSummary
GO

--4.  Create a view called StudentGrades that retrieves the student ID's, full names, courseId's, course names, and marks for each student.
-- TODO: Student Answer here

/* *******************
 * Using the Views
 *  If an operation fails write a brief explanation why.
 *  Do not just quote the error message generated by the server!
 */

--5.  Use the student grades view to create a grade report for studentID 199899200 that shows the students ID, full name, course names and marks.

--6.  Select the same information using the student grades view for studentID 199912010.

--7.  Retrieve the code for the student grades view from the database.

